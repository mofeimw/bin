#!/bin/sh
#
# displays an 8 color palette
# also copies hex codes to clipboard

# define color scheme
_0="#0F161A"    # black
_1="#F9CEC3"    # white
_2="#15A6B1"    # blue
_3="#D65C78"    # red
_4="#D78374"    # orange
_5="#50C08E"    # green
_6="#B08CCC"    # purple
_7="#63798F"    # grey

main() {
    stty -icanon -echo
    printf "\033[2J\033[H\033[?25l"
    trap "stty icanon echo; printf '\033[?25h\033[2J\033[H'" EXIT INT

    row
    row
    row

    # read a single keystroke
    while z=$(dd ibs=1 count=1 2>/dev/null); do
        case $z in
            [0-7])
                printf "\033[2J\033[H"
                row; row; row

                # pbcopy is macOS specific
                [ $(uname) = Darwin ] && eval "printf \$_$z | pbcopy"

                [ $z -ne 0 ] && eval "for _ in {0..$((z - 1))}; do printf '          '; done"
                eval block \$_$z
            ;;

            [8-9]) : ;;

            " ")
                printf '\033[2J\033[H'
                row; row; row
            ;;

            *) exit 0;;
        esac
    done
}

# print out a single color block
block() {
    # remove the leading "#" in the hex code
    set -- ${1#\#}

    # separate the hex code into red, green, and blue values
    red=${1%[[:xdigit:]][[:xdigit:]][[:xdigit:]][[:xdigit:]]}
    green=${1%[[:xdigit:]][[:xdigit:]]}; green=${green#[[:xdigit:]][[:xdigit:]]}
    blue=${1#[[:xdigit:]][[:xdigit:]][[:xdigit:]][[:xdigit:]]}

    # convert from hex to decimal
    red=$(printf '%d' 0x${red})
    green=$(printf '%d' 0x${green})
    blue=$(printf '%d' 0x${blue})

    [ "#${1}" = $_7 ] && printf '\033[48;2;%s;%s;%sm       \033[m' $red $green $blue || printf '\033[48;2;%s;%s;%sm       \033[m   ' $red $green $blue
}

# print out each of the 8 colors
row() {
    block $_0
    block $_1
    block $_2
    block $_3
    block $_4
    block $_5
    block $_6
    block $_7

    printf '\n'
}

main "$@"
